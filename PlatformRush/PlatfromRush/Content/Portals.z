class Portals : ZilchComponent
{
    [Property]
    var Link : CogPath = null;
    var CanPortal : Boolean = false;
    
    
    function Initialize(init : CogInitializer)
    {
        Zero.Connect(this.Owner, Events.CollisionStarted, this.OnCollisionStarted);
        Zero.Connect(this.Owner, Events.CollisionEnded, this.OnCollisionEnded);
    }


    function SetCanPortal(boolean: Boolean)
    {
        this.CanPortal = boolean;
    }

    function OnCollisionStarted(collisionEvent : CollisionEvent)
    {
        var otherObject = collisionEvent.OtherObject;
        
        //replace with player controller
        //var player = otherObject.PlayerController;
        if(this.CanPortal == false)
        {
            
                
                this.Link.Cog.Portals.SetCanPortal(true);
                otherObject.Transform.Translation = this.Link.Cog.Transform.Translation;
            
        }
    }
    
    
    
    function OnCollisionEnded(event : CollisionEvent)
    {
        //when the player finishes its collision change back 
       this.SetCanPortal(false);
    }
}
