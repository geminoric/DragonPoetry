class LevelEditorClass : ZilchComponent
{
    var LevelName : String = "TestName";
    
    function Initialize(init : CogInitializer)
    {
        Zero.Connect(this.Space, Events.LogicUpdate, this.OnLogicUpdate);
        
        //Main buttons
        var but0 = this.Space.Create(Archetype.Find("Button"));
        but0.ButtonClass.Init(Real3(-19,8.3,0), Real3(1.5,1.5,1), this.New, "new", 30);
        var but1 = this.Space.Create(Archetype.Find("Button"));
        but1.ButtonClass.Init(Real3(-16.7,8.3,0), Real3(1.5,1.5,1), this.Save, "save", 30);
        var but2 = this.Space.Create(Archetype.Find("Button"));
        but2.ButtonClass.Init(Real3(-14.4,8.3,0), Real3(1.5,1.5,1), this.Load, "load", 30);
        var but3 = this.Space.Create(Archetype.Find("Button"));
        but3.ButtonClass.Init(Real3(-12.1,8.3,0), Real3(1.5,1.5,1), this.Test, "test", 30);
        var but4 = this.Space.Create(Archetype.Find("Button"));
        but4.ButtonClass.Init(Real3(-9.8,8.3,0), Real3(1.5,1.5,1), this.Rename, "rename", 30);
    }
    
    //Callback functions for buttons
    function New()
    {
        //Delete all the editor objects
        var objs = this.Space.FindAllObjectsByName("EditorObject");
        while(objs.IsNotEmpty)
        {
            objs.Current.Destroy();
            objs.MoveNext();
        }
        //Reset camera
        this.Space.FindObjectByName("Camera2").Transform.Translation = Real3(0, 500, 40);
    }
    function Save()
    {
        this.Space.FindObjectByName("saver").LevelSaveClass.SaveLevel();
    }
    function Load()
    {
        //Delete all the editor objects
        var objs = this.Space.FindAllObjectsByName("EditorObject");
        while(objs.IsNotEmpty)
        {
            objs.Current.Destroy();
            objs.MoveNext();
        }
        //Reset camera
        this.Space.FindObjectByName("Camera2").Transform.Translation = Real3(0, 500, 40);
        
        this.Space.FindObjectByName("saver").LevelSaveClass.LoadLevel("TestName");
        this.Space.FindObjectByName("saver").LevelSaveClass.LoopLoaded(this.LoadIntoEditor);
    }
    function Test()
    {
        Console.WriteLine("Test");
    }
    function Rename()
    {
        Console.WriteLine("Rename");
    }
    
    function LoadIntoEditor(obj : Cog)
    {
        obj.Name = "EditorObject";
        obj.Sprite.SpriteSource = this.LevelSettings.EditorSprite.GetSprite(obj.EditorObjectClass.TileID);
    }
    
    
    function OnLogicUpdate(event : UpdateEvent)
    {
    }
}
