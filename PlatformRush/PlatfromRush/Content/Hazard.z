class Hazard : ZilchComponent
{
    [Property]
    var Damage : Integer = 0;
    [Property]
    var StunOn : Boolean = false;
    [Property]
    var Active : Boolean = false;
    [Property]
    var KnockBackSpeed : Real = 0;
    
    function Initialize(init : CogInitializer)
    {
        Zero.Connect(this.Owner, Events.CollisionStarted, this.OnCollisionStarted);
    }
    
    

    function OnCollisionStarted(collisionEvent : CollisionEvent)
    {
        
      if(this.Active == true)
      {
        var otherObject = collisionEvent.OtherObject;
        //replace with player controller
        var player = otherObject.PlayerController; 
        if(player != null )
        {
            if(otherObject.Health.Vulnurable)
            {
            if(this.StunOn == true)
            {
                otherObject.PlayerController.ToggleStunned();

            }
            
            //check if the knockback speed is valid
            if(this.KnockBackSpeed > 0)
            {
                //change the players state
                otherObject.PlayerController.InAir = true;
                // get the players direction
                var x : Real = -(player.Direction -0.5);
                //set a vector to be at a 45 degrees upward
                var direction: Real3 = Real3( x, Math.Abs(x), 0);
                //normalize it
                direction = Math.Normalize(direction);
                //scale it by the knockbackspeed
                direction.X *= this.KnockBackSpeed;
                direction.Y *= this.KnockBackSpeed * 1.5;

                player.VelX = direction.X;
                player.VelY = direction.Y;
            }
            
            if(this.Damage > 0)
            {
                otherObject.Health.DealDamage(this.Damage);
            }
        }
        }
      }
    }
}
