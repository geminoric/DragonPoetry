class Hazard : ZilchComponent
{

    var Damage : Integer = 1;
    var StunOn : Boolean = false;
    var Active : Boolean = true;

    var KnockBackSpeed : Real = 10;
    
    function Initialize(init : CogInitializer)
    {
        Zero.Connect(this.Owner, Events.CollisionEnded, this.OnCollisionStarted);
    }
    
    function Init()
    {
        Zero.Connect(this.Owner, Events.CollisionEnded, this.OnCollisionStarted);
    }
    
    

    function OnCollisionStarted(collisionEvent : CollisionEvent)
    {
        
      if(this.Active == true)
      {
        var otherObject = collisionEvent.OtherObject;
        //replace with player controller
        var player = otherObject.Controls; 
        if(player != null )
        {
            if(otherObject.Health.Vulnurable)
            {
            if(this.StunOn == true)
            {
                otherObject.PlayerController.ToggleStunned();

            }
            
            //check if the knockback speed is valid
            if(this.KnockBackSpeed > 0)
            {
                //change the players state
                player.Jumped = 1;
                var dist =  otherObject.RigidBody.Velocity;
                //dist = Math.Normalize(dist);
                //scale it by the knockbackspeed
                dist.X = 5 * otherObject.Controls.Direction;
                dist.Y = this.KnockBackSpeed;
                Console.WriteLine(dist);
                Console.WriteLine(otherObject.RigidBody.Velocity);
                otherObject.RigidBody.Velocity = dist;
                Console.WriteLine(otherObject.RigidBody.Velocity);
                 Console.WriteLine(dist.Y);
            }
            
            if(this.Damage > 0)
            {
                otherObject.Health.DealDamage(this.Damage);
            }
        }
        }
      }
    }
}
