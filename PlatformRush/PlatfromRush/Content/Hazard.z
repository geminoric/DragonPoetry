class Hazard : ZilchComponent
{

    var Damage : Integer = 1;
    var StunOn : Boolean = false;
    var Active : Boolean = true;

    var KnockBackSpeed : Real = 10;
    
    function Initialize(init : CogInitializer)
    {
        Zero.Connect(this.Owner, Events.CollisionEnded, this.OnCollisionStarted);
    }
    
    function Init()
    {
        Zero.Connect(this.Owner, Events.CollisionEnded, this.OnCollisionStarted);
    }
    
    

    function OnCollisionStarted(collisionEvent : CollisionEvent)
    {
        
      if(this.Active == true)
      {
        var otherObject = collisionEvent.OtherObject;
        if(otherObject.Name == "Player" )
        {
            if(otherObject.Health.Vulnurable)
            {
            if(this.StunOn == true)
            {
                otherObject.PlayerController.ToggleStunned();

            }
            
            //check if the knockback speed is valid
            if(this.KnockBackSpeed > 0)
            {
                //change the players state
                otherObject.NewControls.FirstJumpUsed = true;
                var dist =  otherObject.RigidBody.Velocity;
                //dist = Math.Normalize(dist);
                if(otherObject.Sprite.FlipX)
                {
                    //scale it by the knockbackspeed
                    dist.X = 5 * -1;
                }
                else
                {
                    //scale it by the knockbackspeed
                    dist.X = 5 * 1;
                }
                
                dist.Y = this.KnockBackSpeed;
                otherObject.RigidBody.Velocity = dist;
            }
            
            if(this.Damage > 0)
            {
                otherObject.Health.DealDamage(this.Damage);
            }
        }
        }
      }
    }
}
