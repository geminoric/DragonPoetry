class DropThrough : ZilchComponent
{
    [Dependency]
    var BoxCollider : BoxCollider = null;
    
    function Initialize(init : CogInitializer)
    {
        //connect to all the collision events
        Zero.Connect(this.Owner, Events.CollisionStarted,     this.OnCollisionStarted);
        Zero.Connect(this.Owner, Events.CollisionPersisted,     this.OnCollisionPersisted);
        //Zero.Connect(this.Space, Events.LogicUpdate, this.OnLogicUpdate);
        Zero.Connect(this.Owner, Events.CollisionEnded,     this.OnCollisionEnded);
    }

    function OnCollisionStarted(event : CollisionEvent)
    {
        var otherObj = event.OtherObject;
        if(otherObj != null)
        {
            /*var myTranslation = this.Owner.Transform.Translation;
            var mySize = this.BoxCollider.Size/2;
            var playerTrans = otherObj.Transform.Translation;
            var playerSize = otherObj.BoxCollider.Size/2;
            myTranslation += mySize;
            playerTrans - playerSize;
            if(myTranslation.Y <= playerTrans.Y)
            {
                this.Owner.BoxCollider.Ghost = false;
            }*/
            if(otherObj.RigidBody.Velocity.Y <= 0)
            {
                this.Owner.BoxCollider.Ghost = false;
            }
        }
    }

    function OnLogicUpdate(event : UpdateEvent)
    {
        //Console.WriteLine(this.Owner.BoxCollider.Ghost);
    }

    function OnCollisionPersisted(event : CollisionEvent)
    {
        //check if the player wantes to move down
        if(Zero.Keyboard.KeyIsPressed(Keys.S))
        {
            //make this a ghost so that the player will drop down
            this.Owner.BoxCollider.Ghost = true;
        }
    }
    
    function OnCollisionEnded(event : CollisionEvent)
    {
        //when the player finishes its collision change back 
        this.Owner.BoxCollider.Ghost = true;
    }
}
