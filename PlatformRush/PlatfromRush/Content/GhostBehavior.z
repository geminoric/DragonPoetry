class GhostBehavior : ZilchComponent
{
    var Count: Integer = 0;
    [Property]
    var ActiveTime : Integer = 0;
    function Initialize(init : CogInitializer)
    {
        Zero.Connect(this.Owner, Events.CollisionStarted, this.OnCollisionStarted);
         Zero.Connect(this.Owner, Events.CollisionEnded, this.OnCollisionEnded);
         Zero.Connect(this.Space, Events.LogicUpdate, this.OnLogicUpdate);
         this.ActiveTime *= 60;
    }
    
    function Init()
    {
        Zero.Connect(this.Owner, Events.CollisionStarted, this.OnCollisionStarted);
         Zero.Connect(this.Owner, Events.CollisionEnded, this.OnCollisionEnded);
         Zero.Connect(this.Space, Events.LogicUpdate, this.OnLogicUpdate);
         this.ActiveTime *= 60;
    }

    function OnCollisionStarted (event : CollisionEvent)
    {
        var otherObject = event.OtherObject;
        if(otherObject.PlayerController != null)
        {
           this.Owner.Destroy();
        }
        this.Owner.BoxCollider.Ghost = true;
    }
    
    function OnCollisionEnded(event : CollisionEvent)
    {
        this.Owner.BoxCollider.Ghost = false;
    }
    
    function OnLogicUpdate(event : UpdateEvent)
    {
        ++this.Count;
        if(this.Count > this.ActiveTime)
        {
            this.Count = 0;
            this.Owner.HomingOnPlayer.ToggleCanMove();
        }
    }
}
